#!/usr/bin/env python3

import argparse
import math
import random
import re
import sys


def choose(words, nb):
    rng = random.SystemRandom()

    return [rng.choice(words) for i in range(nb)]


def rolldice(wordfile, entropy, nb_words=None):
    is_diceware = bool(re.fullmatch('[1-6]+ [\w \'-]+', wordfile.readline().strip()))
    wordfile.seek(0)

    if is_diceware:
        words = [word.strip().split(maxsplit=1)[1] for word in wordfile]
    else:
        words = [word.strip() for word in wordfile]

    nb_lines = len(words)
    entropy_per_line = math.log(nb_lines, 2)
    if not nb_words:
        nb_words = math.ceil(entropy / entropy_per_line)
    else:
        # calculate desired entropy
        entropy = nb_words * entropy_per_line

    if (entropy < 44):
        print('Warning: the requested entropy of {:2.1f} bits seems very low.'.format(entropy),
              file=sys.stderr)

    while True:
        passphrase = ' '.join(choose(words, nb_words))

        # make sure we really have desired entropy, assuming [a-z] only words
        # could only happen with only very short words (1-2 characters)
        if len(passphrase) * math.log(27, 2) > entropy:
            break

    print(passphrase)


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('wordfile', type=argparse.FileType('r'))
    group = parser.add_mutually_exclusive_group()
    group.add_argument('-e', '--entropy', type=int, default=56)
    group.add_argument('nb_words', type=int, nargs='?', default=None)
    args = parser.parse_args()

    rolldice(args.wordfile, args.entropy, args.nb_words)


if __name__ == '__main__':
    main()
